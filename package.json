{
  "name": "photon-cloud-operations-center",
  "version": "1.0.0",
  "type": "module",
  "description": "ðŸš€ PHOTON - Cloud Agentic Operations Center | Revolutionary AI coordination platform",
  "main": "dist/photon/PhotonServer.js",
  "scripts": {
    "dev": "cross-env NODE_ENV=development nodemon --exec ts-node src/photon/PhotonServer.ts",
    "build": "tsc --project tsconfig.json",
    "start": "node dist/photon/PhotonServer.js",
    "photon:dev": "cross-env PHOTON_LOG_LEVEL=debug npm run dev",
    "photon:start": "npm run build && npm start",
    "photon:cloud": "cross-env NODE_ENV=production PHOTON_SSL_ENABLED=true PHOTON_AUTH_ENABLED=true npm start",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:integration": "jest --testPathPattern=integration",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "clean": "rimraf dist",
    "docker:build": "docker build -t photon-operations-center .",
    "docker:run": "docker run -p 8080:8080 -e PHOTON_AUTH_KEY=your-key photon-operations-center",
    "deploy:aws": "npm run build && serverless deploy",
    "deploy:gcp": "npm run build && gcloud app deploy",
    "health": "curl -s http://localhost:8080/health | jq .",
    "dashboard": "open http://localhost:8080/api/v1/metrics/dashboard",
    "docs": "typedoc src --out docs",
    "monitor": "curl -s http://localhost:8080/api/v1/events"
  },
  "keywords": [
    "ai",
    "cloud",
    "orchestration",
    "coordination",
    "multi-agent",
    "operations",
    "automation",
    "photon",
    "central-mcp",
    "revolutionary"
  ],
  "author": "PHOTON Development Team",
  "license": "MIT",
  "dependencies": {
    "@anthropic-ai/sdk": "^0.65.0",
    "@modelcontextprotocol/sdk": "^0.5.0",
    "@types/bcrypt": "^6.0.0",
    "bcrypt": "^6.0.0",
    "bcryptjs": "^2.4.3",
    "better-sqlite3": "^12.4.1",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.21.2",
    "express-rate-limit": "^7.1.5",
    "gray-matter": "^4.0.3",
    "helmet": "^7.1.0",
    "isomorphic-dompurify": "^2.6.0",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "marked": "^15.0.6",
    "morgan": "^1.10.0",
    "openai": "^6.3.0",
    "python-shell": "latest",
    "sql.js": "^1.13.0",
    "tar": "^7.4.3",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "ws": "^8.14.2",
    "yaml": "^2.8.1",
    "yauzl": "^3.0.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^20.1.0",
    "@commitlint/config-conventional": "^20.0.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/better-sqlite3": "^7.6.13",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.19",
    "@types/express": "^4.17.23",
    "@types/jest": "^29.5.8",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/marked": "^5.0.2",
    "@types/morgan": "^1.9.9",
    "@types/node": "^20.19.21",
    "@types/tar": "^6.1.11",
    "@types/uuid": "^9.0.7",
    "@types/ws": "^8.5.10",
    "@types/yauzl": "^2.10.3",
    "@typescript-eslint/eslint-plugin": "^6.13.2",
    "@typescript-eslint/parser": "^6.13.2",
    "cross-env": "^7.0.3",
    "eslint": "^8.55.0",
    "jest": "^29.7.0",
    "nodemon": "^3.0.2",
    "rimraf": "^5.0.5",
    "serverless": "^3.38.0",
    "serverless-http": "^3.2.0",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.2",
    "typedoc": "^0.25.7",
    "typescript": "^5.3.3"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/leolech14/central-mcp.git"
  },
  "bugs": {
    "url": "https://github.com/leolech14/central-mcp/issues"
  },
  "homepage": "https://github.com/leolech14/central-mcp#readme",
  "config": {
    "photon": {
      "port": 8080,
      "environment": "development",
      "database": "./data/photon.db"
    }
  },
  "nodemonConfig": {
    "watch": [
      "src"
    ],
    "ext": "ts,js,json",
    "ignore": [
      "dist/",
      "node_modules/",
      "*.log"
    ],
    "exec": "ts-node src/photon/PhotonServer.ts"
  },
  "eslintConfig": {
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint"
    ],
    "extends": [
      "eslint:recommended",
      "@typescript-eslint/recommended"
    ],
    "rules": {
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/no-explicit-any": "warn",
      "no-console": "warn",
      "prefer-const": "error"
    }
  }
}
